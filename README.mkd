OpenXC Shift Knob
=================

The Haptic Feedback Shift Knob is a manual transmission shift knob capable of
sending haptic and visual signals to the driver. Using a built in algorithm, the
Shift Knob determines when the driver should shift for best performance and then
sends an appropriate haptic pulse through the driver's hand signalling that he
or she should shift.

The Shift Knob hardware is based on the [Arduino][] platform and toolkit. In
order to easily use these tools, the Shift Knob firmware runs on top of the
Arduino bootloader.

For more details on the complete project, visit the [OpenXC Shift
Knob](http://openxcplatform.com/projects/shift-knob.html) webpage.

## Shift Knob Firmware

This program reads in a JSON stream at a baud rate of `115200` and controls the
following 3 components accordingly:

1. Haptic Feedback Motor
1. 7 Segment Display
1. RGB LEDs

A 74hc595 shift register is used to control the 7-sement display and requires 3
inputs: 2 latch pins and 1 data pin. See this
[tutorial](http://arduino.cc/en/Tutorial/ShiftOut) to learn more about shift
registers. RGB LEDs are controlled with 3 PWM pins and the Haptic feedback motor
is controlled with another PWM pin. There is also a PWM pin connection for
controlling the brightness of the 7 segment display, but this functionality has
not yet been implemented.

## Haptic Feedback Motor Control

The Shift Knob firmware has various parameters to control the haptic feel of the
shift knob. There are 3 parameters that affect the shift knob vibration profile:

* `motorOn` - The amount of time in milliseconds that the motor will vibrate
  during a singular pulse
* `motorOff` - The amount of time in milliseconds between vibration pulses
* `motorCount` and `motorPulse` - The number of pulses during a given haptic
  signal sent to the driver. The `motorCount` is used to store number of pulses
  during a given signal and `motorPulse` is used to track the current motor
  pulse until the shift knob has reached the `motorCount`.

The timing of the pulses and the number of pulses is constantly being checked in
the main `loop()`. Future implementations could include instricate haptic
profiles such as a sinusoidal or sawtooth waveform.

## RGB Values

Rather than send individual red, blue, and green values to the shift knob, the
host device sends 1 value between 0 and 255. This value is then mapped such that
at any given time, two of the colors are being combined at some given ratio. A
value of 0 is equal to 100% red whereas, a value of 85 is 100% green, and a
value of 170 is 100% blue. Once the value reaches 255, it is back to 100% red.
Anywhere in between is a mixture. For example, a value between 0 and 85 is some
porportional mixture of red and green.

Future implementations can also control the intensity/brightness of the RGB
values.

## Supported JSON Messages

* value is either 1 or 0. acting as a boolean:

```
{"name": "shift", "value": 1}
```

* value is an integer 0 to 255

```
{"name": "color", "value": 100}
```

* value is 0 to 9

```
{"name": "gear", "value": 1}
```

## Pin Assignments

The pin numbers used below are the [Arduino][] equivalent pins. They are not the
actual pin numbers from the Atmega328 datasheet.

**Haptic Feedback Motor (PWM control):**

 * int motorPin = 5

**8-bit shift register:**

 * int latchPin = 7
 * int clockPin = 8
 * int dataPin = 4

**7 segment brightness control (PWM control):**

 * int digitLED = 6

**RGB LEDs (PWM control):**

 * int redLED = 9
 * int blueLED = 10
 * int greenLED = 11

**Input button:**

 * int buttonPin = 2;

## Dependencies

In addition to the [Arduino][] developer environment, this project also requires
[aJson][] to parse the incoming JSON stream. Download the [aJson][] repository
and copy it to your local `/examples` folder for your Arduino environment.

## Resources

This repository is one of 4 repositories listed below:

**3D Design** - The
[shiftknob-3Ddesign](http://github.com/openxc/shiftknob-3Ddesign) repository
contains .STL and STEP files for the 3D printable shift knob housings as well as
documentation for creating your own physical shift knob design that works with
the PCBs already designed.

**Hardware** - The
[shiftknob-hardware](http://github.com/openxc/shiftknob-hardware) repository
contains Eagle schematics and PCB layouts for the shift knob embedded hardware.

**Firmware** - The
[shiftknob-firmware](http://github.com/openxc/shiftknob-firmware) repository
contains Arduino source code to run on the embedded system as well as other
firmware versions for differing applications.

**Android** - The
[shiftknob-android](http://github.com/openxc/shiftknob-android) repository
contains the Android application to run on the OpenXC host device. This app
sends the appropriate signals to the Shift Knob embedded system.

## License

The firmware source code is available under the BSD open source license.

[aJson]: http://github.com/interactive-matter/aJson
[Arduino]: http://arduino.cc
